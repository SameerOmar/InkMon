//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18444
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace InkMonHelper.NotificationService {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="NotificationService.INotification")]
    public interface INotification {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INotification/CreateNotification", ReplyAction="http://tempuri.org/INotification/CreateNotificationResponse")]
        bool CreateNotification(string refCode, string refByCode, string notificationText);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface INotificationChannel : InkMonHelper.NotificationService.INotification, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class NotificationClient : System.ServiceModel.ClientBase<InkMonHelper.NotificationService.INotification>, InkMonHelper.NotificationService.INotification {
        
        public NotificationClient() {
        }
        
        public NotificationClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public NotificationClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public NotificationClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public NotificationClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public bool CreateNotification(string refCode, string refByCode, string notificationText) {
            return base.Channel.CreateNotification(refCode, refByCode, notificationText);
        }
    }
}
